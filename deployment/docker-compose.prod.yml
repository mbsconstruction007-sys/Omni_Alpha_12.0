version: '3.9'

services:
  omni-alpha-app:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.prod
    image: omni-alpha:5.0-prod
    container_name: omni-alpha-prod
    ports:
      - "8000:8000"
    environment:
      - ENV=production
      - LOG_LEVEL=INFO
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - PYTHONPATH=/app
      - WORKERS=4
      - WORKER_CLASS=uvicorn.workers.UvicornWorker
      - MAX_REQUESTS=10000
      - MAX_REQUESTS_JITTER=1000
    volumes:
      - ../logs:/app/logs
      - ../data:/app/data
    networks:
      - omni-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G
        reservations:
          cpus: '2'
          memory: 2G
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"

  prometheus:
    image: prom/prometheus:latest
    container_name: omni-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - omni-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: omni-grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=OmniAlpha2024!
      - GF_INSTALL_PLUGINS=redis-datasource
    ports:
      - "3000:3000"
    networks:
      - omni-network
    restart: unless-stopped
    depends_on:
      - prometheus

  redis:
    image: redis:7-alpine
    container_name: omni-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - omni-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru

networks:
  omni-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  redis_data:
