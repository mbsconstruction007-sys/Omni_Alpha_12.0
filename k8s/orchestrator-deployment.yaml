apiVersion: apps/v1
kind: Deployment
metadata:
  name: omni-alpha-orchestrator
  namespace: omni-alpha
  labels:
    app: orchestrator
    version: "10.0.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: orchestrator
  template:
    metadata:
      labels:
        app: orchestrator
        version: "10.0.0"
    spec:
      containers:
      - name: orchestrator
        image: omni-alpha/orchestrator:10.0.0
        ports:
        - containerPort: 9000
          name: http
        - containerPort: 9001
          name: grpc
        env:
        - name: ORCHESTRATION_MODE
          value: "distributed"
        - name: CLUSTER_NAME
          value: "omni-alpha-prod"
        - name: DEPLOYMENT_ENV
          value: "production"
        resources:
          requests:
            memory: "4Gi"
            cpu: "2"
          limits:
            memory: "8Gi"
            cpu: "4"
        livenessProbe:
          httpGet:
            path: /health
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 9000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config
          mountPath: /app/config
        - name: secrets
          mountPath: /app/secrets
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: orchestrator-config
      - name: secrets
        secret:
          secretName: orchestrator-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator-service
  namespace: omni-alpha
spec:
  selector:
    app: orchestrator
  ports:
  - name: http
    port: 9000
    targetPort: 9000
  - name: grpc
    port: 9001
    targetPort: 9001
  type: LoadBalancer
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: orchestrator-hpa
  namespace: omni-alpha
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: omni-alpha-orchestrator
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
