version: '3.8'

services:
  # ============================================
  # ORCHESTRATION LAYER
  # ============================================
  orchestrator:
    build: ./backend
    container_name: omni-alpha-orchestrator
    ports:
      - "9000:9000"
    environment:
      - ORCHESTRATION_MODE=distributed
      - DEPLOYMENT_ENV=production
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    networks:
      - omni-alpha-network
    depends_on:
      - postgres
      - redis
      - kafka
      - mongodb
    restart: always
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G

  # ============================================
  # DATABASES
  # ============================================
  postgres:
    image: postgres:14
    container_name: omni-alpha-postgres
    environment:
      POSTGRES_DB: omni_alpha
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - omni-alpha-network

  mongodb:
    image: mongo:5
    container_name: omni-alpha-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - omni-alpha-network

  redis:
    image: redis:7-alpine
    container_name: omni-alpha-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - omni-alpha-network

  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: omni-alpha-timescaledb
    environment:
      POSTGRES_DB: market_data
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    volumes:
      - timescale_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - omni-alpha-network

  # ============================================
  # MESSAGE QUEUE
  # ============================================
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: omni-alpha-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - omni-alpha-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: omni-alpha-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - omni-alpha-network

  # ============================================
  # MONITORING
  # ============================================
  prometheus:
    image: prom/prometheus:latest
    container_name: omni-alpha-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - omni-alpha-network

  grafana:
    image: grafana/grafana:latest
    container_name: omni-alpha-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    ports:
      - "3000:3000"
    networks:
      - omni-alpha-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    container_name: omni-alpha-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - omni-alpha-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.0
    container_name: omni-alpha-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - omni-alpha-network
    depends_on:
      - elasticsearch

networks:
  omni-alpha-network:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  timescale_data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:
