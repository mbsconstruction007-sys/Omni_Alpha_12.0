version: '3.8'

services:
  omni-alpha-trading:
    build: .
    container_name: omni-alpha-enhanced
    restart: unless-stopped
    environment:
      - ALPACA_API_KEY=${ALPACA_API_KEY}
      - ALPACA_SECRET_KEY=${ALPACA_SECRET_KEY}
      - ALPACA_BASE_URL=${ALPACA_BASE_URL}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - MAX_POSITION_SIZE_PERCENT=10
      - MAX_POSITIONS=20
      - STOP_LOSS_PERCENT=3
      - TAKE_PROFIT_PERCENT=6
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./models:/app/models
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - omni-alpha-network

  redis:
    image: redis:7-alpine
    container_name: omni-alpha-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - omni-alpha-network

  prometheus:
    image: prom/prometheus:latest
    container_name: omni-alpha-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - omni-alpha-network

  grafana:
    image: grafana/grafana:latest
    container_name: omni-alpha-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=omni_alpha_2025
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana-dashboard.json:/var/lib/grafana/dashboards/trading.json
    networks:
      - omni-alpha-network

networks:
  omni-alpha-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data:
