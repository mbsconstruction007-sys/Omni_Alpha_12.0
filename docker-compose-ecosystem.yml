version: '3.8'

services:
  # Enhanced Trading Bot
  omni-alpha-enhanced:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: omni-alpha-enhanced
    restart: unless-stopped
    environment:
      - ALPACA_API_KEY=${ALPACA_API_KEY}
      - ALPACA_SECRET_KEY=${ALPACA_SECRET_KEY}
      - ALPACA_BASE_URL=${ALPACA_BASE_URL}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - REDIS_URL=redis://redis:6379
      - PROMETHEUS_URL=http://prometheus:9090
    depends_on:
      - redis
      - prometheus
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./models:/app/models
    ports:
      - "8000:8000"
    networks:
      - omni-alpha-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: omni-alpha-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - omni-alpha-network

  # PostgreSQL for trade history and analytics
  postgres:
    image: postgres:15-alpine
    container_name: omni-alpha-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=omni_alpha
      - POSTGRES_USER=trader
      - POSTGRES_PASSWORD=secure_trading_2025
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - omni-alpha-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: omni-alpha-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - omni-alpha-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: omni-alpha-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=omni_alpha_2025
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana-dashboard.json:/var/lib/grafana/dashboards/trading.json
      - ./monitoring/grafana-datasource.yml:/etc/grafana/provisioning/datasources/prometheus.yml
    depends_on:
      - prometheus
    networks:
      - omni-alpha-network

  # AlertManager for trading alerts
  alertmanager:
    image: prom/alertmanager:latest
    container_name: omni-alpha-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    networks:
      - omni-alpha-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: omni-alpha-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - omni-alpha-enhanced
      - grafana
    networks:
      - omni-alpha-network

networks:
  omni-alpha-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data:
  alertmanager-data:
